[
  {
    "title": "Generate Bootstrap Pokémon",
    "color": "40, 154, 68",
    "language": "English",
    "input_fields": [
      {
        "type": "command",
        "name": "LoadAdrsValue",
        "parameters": [
          {
            "name": "address",
            "type": "text",
            "value": "[FUN_LoadAdrsAdrs] + 0x11"
          },
          {
            "name": "value",
            "type": "text",
            "value": "0x0"
          }
        ]
      },
      {
        "type": "command",
        "name": "LoadAdrsValue",
        "parameters": [
          {
            "name": "address",
            "type": "text",
            "value": "[FUN_LoadAdrsAdrs] + 0x13"
          },
          {
            "name": "value",
            "type": "text",
            "value": "0x60"
          }
        ]
      },
      {
        "type": "command",
        "name": "LoadAdrsAdrs",
        "parameters": [
          {
            "name": "tg",
            "type": "text",
            "value": "[rng_address]"
          },
          {
            "name": "src",
            "type": "text",
            "value": "[rng_state]"
          }
        ]
      },
      {
        "type": "command",
        "name": "AddPokemon",
        "parameters": [
          {
            "name": "species",
            "type": "text",
            "value": "Porygon-Z"
          },
          {
            "name": "level",
            "type": "text",
            "value": ""
          },
          {
            "name": "item",
            "type": "text",
            "value": ""
          },
          {
            "name": "work",
            "type": "text",
            "value": "0x4000"
          }
        ]
      },
      {
        "type": "command",
        "name": "LoadAdrsAdrs",
        "parameters": [
          {
            "name": "tg",
            "type": "text",
            "value": "[CapitalWordsetAdrs]"
          },
          {
            "name": "src",
            "type": "text",
            "value": "[CharacterValues]"
          }
        ]
      },
      {
        "type": "command",
        "name": "LoadAdrsAdrs",
        "parameters": [
          {
            "name": "tg",
            "type": "text",
            "value": "[FUN_GetPokeCount] + 0x24"
          },
          {
            "name": "src",
            "type": "text",
            "value": "0x80283801"
          }
        ]
      },
      {
        "type": "command",
        "name": "GetPokeCount",
        "parameters": [
          {
            "name": "work",
            "type": "text",
            "value": "0x4040"
          }
        ]
      },
      {
        "type": "command",
        "name": "NameInPoke",
        "parameters": [
          {
            "name": "party index",
            "type": "text",
            "value": "0x4040"
          },
          {
            "name": "work",
            "type": "text",
            "value": "0x4000"
          }
        ]
      },
      {
        "type": "command",
        "name": "WipeFadeStart",
        "parameters": [
          {
            "name": "div",
            "type": "text",
            "value": ""
          },
          {
            "name": "syn",
            "type": "text",
            "value": ""
          },
          {
            "name": "type",
            "type": "text",
            "value": "1"
          },
          {
            "name": "col",
            "type": "text",
            "value": ""
          }
        ]
      },
      {
        "type": "command",
        "name": "End",
        "parameters": []
      }
    ],
    "variables": [
      {
        "language": "English",
        "name": "FUN_LoadAdrsAdrs",
        "value": "0x02039ACC"
      },
      {
        "language": "French",
        "name": "FUN_LoadAdrsAdrs",
        "value": "0x02039B3C"
      },
      {
        "language": "German",
        "name": "FUN_LoadAdrsAdrs",
        "value": "0x02039B3C"
      },
      {
        "language": "Italian",
        "name": "FUN_LoadAdrsAdrs",
        "value": "0x02039B3C"
      },
      {
        "language": "Spanish",
        "name": "FUN_LoadAdrsAdrs",
        "value": "0x02039B3C"
      },
      {
        "language": "English",
        "name": "CapitalWordsetAdrs",
        "value": "0x020F9E6C"
      },
      {
        "language": "English",
        "name": "CharacterValues",
        "value": "0xFFFBBF66"
      },
      {
        "language": "English",
        "name": "rng_address",
        "value": "0x021C4D48"
      },
      {
        "language": "All",
        "name": "rng_state",
        "value": "0xCD1FE751"
      },
      {
        "language": "English",
        "name": "FUN_GetPokeCount",
        "value": "0x02044B00"
      }
    ],
    "documentation": "# Wondercard ACE Distribution Code\nVersion Support: English DP/English Platinum\n\nThis code allows you to distribute Wonder Cards to Platinum that allow transferring ACE to it. If you're interested in how this ACE method functions, you can refer to my blogpost '[Remote Code Execution in Generation IV Pokémon Games Through Mystery Gifts](https://jorikdevreese.com/index.php/2024/02/17/remote-code-execution-in-generation-4-pokemon-games-through-mystery-gifts/)'.\n\nSome prerequisites have to be met, but the ACE can be transferred as soon as half an hour or less into Platinum's gameplay.\n\n## Prerequisites\n1. Both games [unlocked Mystery Gifts](https://www.serebii.net/platinum/mysterygift.shtml).\n2. Both games added each other as friends in the Pal Pad, obtained at the bottom of the Pokémon Center.\n3. Diamond/Pearl has a form of ASE set up. It's recommended to use the Mystery Gift bootstrap, but not required.\n4. Diamond/Pearl has a **manually** cleared Calendar app. If it is already cleared, enable one of the dates and disable it again.\n5. Platinum has obtained at least 5 Pokémon, of which 1 is a dummy that can be traded.\n\nIf you want to perform the setup as early as Jubilife City in Platinum, you must obtain a fishing rod. \nOtherwise, you must progress at least past Oreburgh City. The details of this will be explained later.\n\n## Setup Details\nThis section explains some of the details behind the setup, just enough to perform the setup. If you want to know more, refer to the Technical Details.\nThe concept behind this setup is that we abuse a flaw in how Mystery Gifts are obtained to modify memory of the game. Specifically, we'll obtain a gift in Platinum that alters what script an NPC executes when interacted with.\n\nThe gift causes the location of the script to be determined by the PID of the 5th Pokémon in your party, after a battle. We'll specify that the script we execute is located in the Dot Artist, similarly to the ASE in Diamond and Pearl.\n\nThe PID that we read can be overwriting by almost any action, such as opening a menu. So after we have done a battle to load the PID, it's essential we only receive the gift and talk to the NPC that executes our Dot Artist code. The initial bootstrap code will then make it so instead of needing the PID after battle, we can use the nickname of a Pokémon in our party to specify where the code is executed. This allows us to simply open and close a party, then execute the code by talking to the NPC.\n\nThe Mystery Gifts we want to obtain in Platinum will be sent from Pokémon Diamond and Pearl, generated through ACE. Since we also require the Dot Artist on Platinum, which is only obtainable lategame, the code actually generates both an ACE Wondercard and a Dot Artist Poketch App Wondercard. If Platinum does not yet have the Dot Artist, it should receive this gift first.\n\nAdditionally, we also need the Pokémon with the specific PID and Nickname for the ACE on Platinum. The first code to execute lets you generate this Pokémon, simply trade it and put it in the 5th party slot (bottom left) in Pokémon Platinum.\n\n## Steps to perform\n\n### 1. Generate the Pokémon\nStart out by generating the bootstrap Pokémon. Make sure that your party has an empty slot in it, to generate the Pokémon in. If the code is correctly executed, the game will automatically open a Nickname screen for Porygon-Z. You'll notice that the `A` and `B` characters are empty. \nThe first two characters in the name can be anything. The next two should be the `A` and `B` characters, although they will present as empty. The remaining characters do not matter. You may clone the Pokémon with the clone code on the site if you intend to distribute it multiple times.\n\nNickname: `_ _ A B _ _ _ _ _ _` \n\nTrade it to Platinum, and put it in the 5th party slot (bottom left) in Pokémon Platinum.\n\n### 2. Generate the Wonder Cards\nUse the ACE transfer Wonder Card code to generate the Card that results in ACE, and the card to give Dot Artist. They both fit in the same Dot Artist code.\nAfter saving and rebooting, select the Mystery Gift option in the Title Screen. The option to check cards should be present. Select it. Two cards are now available, without any name. The ACE card can be distinguished by the Porygon-Z in the top right. The other card is the Dot Artist distribution card.\n\nIf you press A, you should be able to share the Wonder Card. Otherwise, there will be a mistake in your Dot Artist. There is no harm in fixing the Dot Artist and executing until it works as intended.\n\nOn the Platinum side, also select the Mystery Gift Option. Request a gift from a friend, and follow up by sending the gift from Diamond/Pearl. If everything goes well, you'll receive a mail with a long glitchy description. Make sure to send and receive the Dot Artist gift FIRST if you haven't obtained it on Platinum yet. You can go ahead and obtain the Dot Artist Poketch gift from the Pokémon Market, but do not obtain the ACE one yet.\n\n### 3. Set up Dot Artist on Platinum\nSet up the Dot Artist code on Platinum. This code will turn the initial ACE through the PID in battle, to using it's Nickname. This is significantly easier, as we can load the Nickname by simply opening and closing the Party later.\n\nOnce the Dot Artist is ready, and the bootstrap Pokémon is in the 5th slot, we can execute the code. To do this, we need to load the PID during a battle, talk to the Postman to receive the gift, then talk to the Pokemon Market employee on the right side. Below you can find the exact steps for Jubilife City and Oreburgh.\n\nIMPORTANT NOTICE: **Do not open any menus, press X to open the Field Menu, talk to NPCs... during this procedure. Perform the steps exactly as told.**\n\n#### Jubilife City: \nJubilife City sadly overwrites the PID if we enter the city by walking in. The only way to circumvent this is to enter the city through a warp. Luckily for us, on the left side of Jubilife City there is a Gate to route 218. We can obtain a fishing rod here. Then, save next to the water (in case anything goes wrong, and you need to redo steps).\n\n1. Fish until you get an exclamation mark. It doesn't matter whether you enter battle, it's faster if you don't.\n2. Walk/Bicycle to the Pokémon Market.\n3. Receive the Gift from the Postman\n4. Talk to the Poke Market employee to the right, behind the counter.\n\n#### Oreburgh City:\nIn Oreburgh City the setup is slightly faster, as we can simply get a grass encounter above the city. Save next to it in case anything goes wrong.\n\n1. Get into a wild encounter. Either on the grass above Oreburgh City, or one of the caves.\n2. Walk/Bicycle to the Pokémon Market.\n3. Receive the Gift from the Postman\n4. Talk to the Poke Market employee to the right, behind the counter.\n\nAfter talking to her once, put the ACE check code in the Dot Artist. Then, swap the bootstrap Pokémon to the first slot in the party. Now close the party, open the party again (to load the Nickname in first slot), and close out of all menus.\n\nNow talk to the lady again. If you hear a ding, you can save the game! Congratulations, you just transferred ACE to Platinum.\n\n\n\n\n\n\n\n\n\n"
  },
  {
    "title": "ACE transfer Wonder Card (Platinum)",
    "color": "180, 180, 180",
    "language": "English",
    "input_fields": [
      {
        "type": "command",
        "name": "LoadAdrsValue",
        "parameters": [
          {
            "name": "address",
            "type": "text",
            "value": "[FUN_PaperPlaneSet] + 0x8"
          },
          {
            "name": "value",
            "type": "text",
            "value": "0x18"
          }
        ]
      },
      {
        "type": "command",
        "name": "LoadAdrsValue",
        "parameters": [
          {
            "name": "address",
            "type": "text",
            "value": "[FUN_PaperPlaneSet] + 0x9"
          },
          {
            "name": "value",
            "type": "text",
            "value": "0x47"
          }
        ]
      },
      {
        "type": "command",
        "name": "PaperplaneSet",
        "parameters": [
          {
            "name": "work",
            "type": "text",
            "value": "0x331D"
          }
        ]
      },
      {
        "type": "memory_editor",
        "memory": [
          "0x18",
          "0x1C",
          "0x02",
          "0x88",
          "0x00",
          "0x2A",
          "0x00",
          "0xD1",
          "0x10",
          "0xBD",
          "0x03",
          "0x4B",
          "0x41",
          "0x88",
          "0x41",
          "0x18",
          "0x00",
          "0x1D",
          "0x98",
          "0x47",
          "0xF5",
          "0xE7",
          "0x00",
          "0x00",
          "0xE0",
          "0xE3",
          "0x0C",
          "0x02",
          "0x08",
          "0x00",
          "0x4B",
          "0x96",
          "0x20",
          "0x83",
          "0xB8",
          "0xED",
          "0x20",
          "0x83",
          "0xB8",
          "0xED",
          "0x0C",
          "0x00",
          "0x6C",
          "0x9E",
          "0x06",
          "0x00",
          "0x00",
          "0x00",
          "0x01",
          "0x00",
          "0x00",
          "0x00",
          "0x6E",
          "0xD7",
          "0x01",
          "0x00",
          "0x04",
          "0x00",
          "0xA4",
          "0xA1",
          "0xFF",
          "0x00",
          "0x89",
          "0x00",
          "0x06",
          "0x00",
          "0xA0",
          "0x9F",
          "0x80",
          "0x1D",
          "0x00",
          "0x00",
          "0xEE",
          "0x00",
          "0x04",
          "0x00",
          "0xEA",
          "0xA4",
          "0xFF",
          "0x00",
          "0xDF",
          "0x01",
          "0x06",
          "0x00",
          "0xE6",
          "0xA2",
          "0x80",
          "0x1D",
          "0x00",
          "0x00",
          "0xEE",
          "0x00",
          "0x08",
          "0x00",
          "0x90",
          "0xA1",
          "0x0B",
          "0x00",
          "0x00",
          "0x00",
          "0x11",
          "0x00"
        ]
      }
    ],
    "variables": [
      {
        "language": "English",
        "name": "FUN_PaperPlaneSet",
        "value": "0x0203e4d8"
      },
      {
        "language": "All",
        "name": "",
        "value": ""
      }
    ],
    "documentation": ""
  },
  {
    "title": "Platinum NPC ASE Bootstrap",
    "color": "184, 119, 46",
    "language": "English",
    "input_fields": [
      {
        "type": "command",
        "name": "LoadAdrsValue",
        "parameters": [
          {
            "name": "address",
            "type": "text",
            "value": "[FUN_LoadAdrsAdrs] + 0x11"
          },
          {
            "name": "value",
            "type": "text",
            "value": "0x0"
          }
        ]
      },
      {
        "type": "command",
        "name": "LoadAdrsValue",
        "parameters": [
          {
            "name": "address",
            "type": "text",
            "value": "[FUN_LoadAdrsAdrs] + 0x13"
          },
          {
            "name": "value",
            "type": "text",
            "value": "0x60"
          }
        ]
      },
      {
        "type": "command",
        "name": "LoadAdrsValue",
        "parameters": [
          {
            "name": "address",
            "type": "text",
            "value": "[FUN_CompAdrsAdrs] + 0x9"
          },
          {
            "name": "value",
            "type": "text",
            "value": "0x1C"
          }
        ]
      },
      {
        "type": "command",
        "name": "LoadAdrsAdrs",
        "parameters": [
          {
            "name": "tg",
            "type": "text",
            "value": "[FUN_CompAdrsAdrs] + 0x10"
          },
          {
            "name": "src",
            "type": "text",
            "value": "0x68094902"
          }
        ]
      },
      {
        "type": "command",
        "name": "LoadAdrsAdrs",
        "parameters": [
          {
            "name": "tg",
            "type": "text",
            "value": "[FUN_CompAdrsAdrs] + 0x14"
          },
          {
            "name": "src",
            "type": "text",
            "value": "0xBD385060"
          }
        ]
      },
      {
        "type": "command",
        "name": "LoadAdrsAdrs",
        "parameters": [
          {
            "name": "tg",
            "type": "text",
            "value": "[FUN_CompAdrsAdrs] + 0x1E"
          },
          {
            "name": "src",
            "type": "text",
            "value": "[base_address]"
          }
        ]
      },
      {
        "type": "command",
        "name": "CmpAdrsAdrs",
        "parameters": [
          {
            "name": "address1",
            "type": "text",
            "value": "[offset]"
          },
          {
            "name": "address2",
            "type": "text",
            "value": "[value]"
          }
        ]
      },
      {
        "type": "command",
        "name": "End",
        "parameters": []
      }
    ],
    "variables": [
      {
        "language": "All",
        "name": "offset",
        "value": "0x23C15"
      },
      {
        "language": "All",
        "name": "value",
        "value": "0x9C4E"
      },
      {
        "language": "English",
        "name": "FUN_CompAdrsAdrs",
        "value": "0x0203F8E0"
      },
      {
        "language": "French",
        "name": "FUN_CompAdrsAdrs",
        "value": "0x02039C2C"
      },
      {
        "language": "German",
        "name": "FUN_CompAdrsAdrs",
        "value": "0x02039C2C"
      },
      {
        "language": "Italian",
        "name": "FUN_CompAdrsAdrs",
        "value": "0x02039C2C"
      },
      {
        "language": "Spanish",
        "name": "FUN_CompAdrsAdrs",
        "value": "0x02039C2C"
      },
      {
        "language": "English",
        "name": "FUN_LoadAdrsAdrs",
        "value": "0x0203F7F0"
      },
      {
        "language": "French",
        "name": "FUN_LoadAdrsAdrs",
        "value": "0x2039B3C"
      },
      {
        "language": "German",
        "name": "FUN_LoadAdrsAdrs",
        "value": "0x2039B3C"
      },
      {
        "language": "Italian",
        "name": "FUN_LoadAdrsAdrs",
        "value": "0x2039B3C"
      },
      {
        "language": "Spanish",
        "name": "FUN_LoadAdrsAdrs",
        "value": "0x2039B3C"
      },
      {
        "language": "English",
        "name": "base_address",
        "value": "0x02101D40"
      },
      {
        "language": "German",
        "name": "base_address",
        "value": "0x02107100"
      },
      {
        "language": "French",
        "name": "base_address",
        "value": "0x02107140"
      },
      {
        "language": "Italian",
        "name": "base_address",
        "value": "0x021070A0"
      },
      {
        "language": "Japanese",
        "name": "base_address",
        "value": "0x02108818"
      },
      {
        "language": "Korean",
        "name": "base_address",
        "value": "0x021045C0"
      },
      {
        "language": "Spanish",
        "name": "base_address",
        "value": "0x02107160"
      }
    ],
    "documentation": ""
  },
  {
    "title": "NPC ACE check",
    "color": "125, 202, 222",
    "language": "English",
    "input_fields": [
      {
        "type": "command",
        "name": "MePlay",
        "parameters": [
          {
            "name": "sound",
            "type": "text",
            "value": "0x489"
          }
        ]
      },
      {
        "type": "command",
        "name": "TimeWait",
        "parameters": [
          {
            "name": "number",
            "type": "text",
            "value": "1"
          },
          {
            "name": "work",
            "type": "text",
            "value": "0x4000"
          }
        ]
      },
      {
        "type": "command",
        "name": "ReportSave",
        "parameters": [
          {
            "name": "work",
            "type": "text",
            "value": "0x4000"
          }
        ]
      },
      {
        "type": "command",
        "name": "End",
        "parameters": []
      }
    ],
    "variables": [],
    "documentation": ""
  }
]